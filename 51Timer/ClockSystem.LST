C51 COMPILER V9.00   CLOCKSYSTEM                                                           07/20/2017 20:57:28 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE CLOCKSYSTEM
OBJECT MODULE PLACED IN ClockSystem.OBJ
COMPILER INVOKED BY: D:\ProgramFiles\KEIL4\C51\BIN\C51.EXE ClockSystem.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**********************718创新实验室开发板例程*********************
   2          *  编写：718创新实验室  ――ZZS
   3          *  平台：stc15K60s2
   4          *  说明：由于作者的水平有限，若有不足之处，还请大家谅解。
   5          *                建议大家多看看数据手册。
   6          *                有问题，请联系我QQ523939208     by 718 ZZS       
   7          ******************************************************************/
   8          
   9          #include "ClockSystem.h"
  10          #include "STC15F2K60S2.H"
  11          #include "data.h"
  12          #include "key.h"
  13          #include "display.h"
  14          
  15          /****声明函数****/
  16          void Timer_init();
  17          void data_init();
  18          void Clock_interface();
  19          void Timer_interface();
  20          void StopWatch_Interface();
  21          void Timeset(time *Base,char AddMS);
  22          void T0_isr();     //interrupt 1 
  23          
  24          
  25          /****函数定义****/
  26          void Timer_init()
  27          {
  28   1          AUXR |= 0x80;               //定时器时钟1T模式
  29   1              TMOD &= 0xF0;           //设置定时器模式
  30   1              TL0 = 0x00;             //设置定时初值
  31   1              TH0 = 0x28;             //设置定时初值
  32   1              TF0 = 0;                //清除TF0标志
  33   1              TR0 = 1;                //定时器0开始计时
  34   1          ET0=1;                      //使能定时器0中断
  35   1      
  36   1          IT0=1;                 //设定为下降沿触发     IT0=0;下降沿和上升沿均可触发
  37   1              EX0=1;             //开启外部中断0
  38   1              EA=1;              //开启总中断
  39   1      }
  40          
  41          
  42          void data_init()
  43          {
  44   1      
  45   1          ClockBase.CurrentMode=StopWatch;        //设置默认界面为时钟界面
  46   1      
  47   1          /****设置时钟****/
  48   1          ClockBase.Clock.CurrentInterface=Start;  //设置当前模式和初始化时间
  49   1          ClockBase.Clock.CurrentTime.MS=0;
  50   1          ClockBase.Clock.CurrentTime.S=0;
  51   1          ClockBase.Clock.CurrentTime.M=0;
  52   1          ClockBase.Clock.CurrentTime.H=0;
  53   1      
  54   1          /****设置秒表****/
  55   1          ClockBase.StopWatch.CurrentInterface=Setting;   //设置当前模式和初始化时间
C51 COMPILER V9.00   CLOCKSYSTEM                                                           07/20/2017 20:57:28 PAGE 2   

  56   1          ClockBase.StopWatch.CurrentTime.MS=0;
  57   1          ClockBase.StopWatch.CurrentTime.S=0;
  58   1          ClockBase.StopWatch.CurrentTime.M=0;
  59   1          ClockBase.StopWatch.CurrentTime.H=0;
  60   1      
  61   1          /****设置定时器****/
  62   1          ClockBase.Timer.CurrentInterface=Setting;   //设置当前模式和初始化时间
  63   1          ClockBase.Timer.CurrentTime.MS=0;
  64   1          ClockBase.Timer.CurrentTime.S=0;
  65   1          ClockBase.Timer.CurrentTime.M=0;
  66   1          ClockBase.Timer.CurrentTime.H=0;
  67   1      }
  68          
  69          void system_init()
  70          {
  71   1          Timer_init();               //设置定时器初始化
  72   1          data_init();                //界面初始化
  73   1      }
  74          
  75          
  76          void Timeset(time *Base,char AddMS)
  77          {
  78   1          if(AddMS==0||AddMS>=100||AddMS<=-100)
  79   1              return;
  80   1      
  81   1          if(AddMS>0)
  82   1          {
  83   2              Base->MS+=AddMS;
  84   2              Base->S+=(Base->MS/1000);
  85   2              Base->M+=(Base->S/60);
  86   2              Base->H+=(Base->M/60);
  87   2      
  88   2              Base->MS=(Base->MS%1000);
  89   2              Base->S=(Base->S%60);
  90   2              Base->M=(Base->M%60);
  91   2              Base->H=(Base->H%24);
  92   2          }
  93   1          else
  94   1          {
  95   2              AddMS=-AddMS;
  96   2      
  97   2              Base->MS-=AddMS;
  98   2              if(Base->MS<0)
  99   2              {
 100   3                  Base->MS=999;
 101   3                  Base->S--;
 102   3              }
 103   2              if(Base->S<0)
 104   2              {
 105   3                  Base->M--;
 106   3                  Base->S=59;
 107   3              }
 108   2              if(Base->M<0)
 109   2              {
 110   3                  Base->H--;
 111   3                  Base->M=59;
 112   3              }
 113   2              if(Base->H<0)
 114   2              {
 115   3                  Base->H=23;
 116   3              }
 117   2          }
C51 COMPILER V9.00   CLOCKSYSTEM                                                           07/20/2017 20:57:28 PAGE 3   

 118   1      }
 119          
 120          void Timer_interface()
 121          {
 122   1          switch(ClockBase.Timer.CurrentInterface)
 123   1          {
 124   2              case Setting:
 125   2                  if(Get_Key()==SecondAdd_Button)
 126   2                  {
 127   3                      ClockBase.Timer.CurrentTime.S+=1;
 128   3                      if(ClockBase.Timer.CurrentTime.S>60)
 129   3                      {
 130   4                          ClockBase.Timer.CurrentTime.M++;
 131   4                          ClockBase.Timer.CurrentTime.S=0;
 132   4                      }
 133   3                  }
 134   2                  else if(Get_Key()==SecondCut_Button)
 135   2                  {
 136   3                      ClockBase.Timer.CurrentTime.S-=1;
 137   3                      if(ClockBase.Timer.CurrentTime.S<0)
 138   3                      {
 139   4                          ClockBase.Timer.CurrentTime.M--;
 140   4                          ClockBase.Timer.CurrentTime.S=59;
 141   4                      }
 142   3                  }
 143   2                  else if(Get_Key()==MinAdd_Button)
 144   2                  {
 145   3                      ClockBase.Timer.CurrentTime.M++;
 146   3                  }
 147   2                  else if(Get_Key()==MinCut_Button)
 148   2                  {
 149   3                      ClockBase.Timer.CurrentTime.M--;
 150   3                      if(ClockBase.Timer.CurrentTime.M<=0)
 151   3                          ClockBase.Timer.CurrentTime.M=0;
 152   3                  }
 153   2      
 154   2                  if(Get_Key()==InterfaceShifting_Button)
 155   2                  {
 156   3                      ClockBase.Timer.CurrentInterface=Start;
 157   3                  }
 158   2                  break;
 159   2              
 160   2              case Start:
 161   2                  if(Get_Key()==InterfaceShifting_Button)
 162   2                  {
 163   3                      ClockBase.Timer.CurrentInterface=Setting;
 164   3                  }
 165   2                  break;
 166   2              default:
 167   2                  ClockBase.Timer.CurrentInterface=Start;
 168   2              
 169   2          }
 170   1      }
 171          
 172          void Clock_interface()
 173          {
 174   1          switch(ClockBase.Clock.CurrentInterface)
 175   1          {
 176   2              case Start:
 177   2                  if(Get_Key()==SecondAdd_Button)
 178   2                  {
 179   3      
C51 COMPILER V9.00   CLOCKSYSTEM                                                           07/20/2017 20:57:28 PAGE 4   

 180   3                  }
 181   2                  else if(Get_Key()==SecondCut_Button)
 182   2                  {
 183   3      
 184   3                  }
 185   2                  else if(Get_Key()==MinAdd_Button)
 186   2                  {
 187   3                      ClockBase.Clock.CurrentTime.M++;
 188   3                  }
 189   2                  else if(Get_Key()==MinCut_Button)
 190   2                  {
 191   3                      ClockBase.Clock.CurrentTime.M--;
 192   3                      if(ClockBase.Clock.CurrentTime.M<=0)
 193   3                          ClockBase.Clock.CurrentTime.M=59;
 194   3                  }
 195   2                  else if(Get_Key()==HoursAdd_Button)
 196   2                  {
 197   3                      ClockBase.Clock.CurrentTime.H++;
 198   3                  }
 199   2                  else if(Get_Key()==HoursCut_Button)
 200   2                  {
 201   3                      ClockBase.Clock.CurrentTime.H--;
 202   3                      if(ClockBase.Clock.CurrentTime.H<=0)
 203   3                          ClockBase.Clock.CurrentTime.H=23;
 204   3                  }
 205   2                  break;
 206   2              
 207   2              default:
 208   2                  ClockBase.Clock.CurrentInterface=Start;
 209   2          }
 210   1      }
 211          
 212          void Delay1000ms()              //@11.0592MHz
 213          {
 214   1              unsigned char i, j, k;
 215   1              i = 43;
 216   1              j = 6;
 217   1              k = 203;
 218   1              do
 219   1              {
 220   2                      do
 221   2                      {
 222   3                              while (--k);
 223   3                      } while (--j);
 224   2              } while (--i);
 225   1      }
 226          
 227          void StopWatch_Interface()
 228          {
 229   1          switch(ClockBase.StopWatch.CurrentInterface)
 230   1          {
 231   2              case Start:
 232   2                  if(Get_Key()==InterfaceShifting_Button)
 233   2                  {
 234   3                      ClockBase.StopWatch.CurrentInterface=Setting;
 235   3                  }
 236   2                  /*if(P34==0&&ClockBase.StopWatch.CurrentTime.S>3)
 237   2                  {
 238   2                      ClockBase.StopWatch.CurrentInterface=Setting;
 239   2                  }*/
 240   2                  break;
 241   2              
C51 COMPILER V9.00   CLOCKSYSTEM                                                           07/20/2017 20:57:28 PAGE 5   

 242   2              case Setting:
 243   2                  if(Get_Key()==InterfaceShifting_Button)
 244   2                  {
 245   3                      ClockBase.StopWatch.CurrentInterface=Start;
 246   3                      ClockBase.StopWatch.CurrentTime.MS=0;
 247   3                      ClockBase.StopWatch.CurrentTime.S=0;
 248   3                      ClockBase.StopWatch.CurrentTime.M=0;
 249   3                      ClockBase.StopWatch.CurrentTime.H=0;
 250   3                  }
 251   2                  /*if(P34==0)
 252   2                  {
 253   2                      ClockBase.StopWatch.CurrentInterface=Start;
 254   2                                      ClockBase.StopWatch.CurrentTime.MS=0;
 255   2                      ClockBase.StopWatch.CurrentTime.S=0;
 256   2                      ClockBase.StopWatch.CurrentTime.M=0;
 257   2                      ClockBase.StopWatch.CurrentTime.H=0;
 258   2                      while(P34==0);
 259   2                                      Delay1000ms();
 260   2                  }*/
 261   2                  break;
 262   2              
 263   2              default:
 264   2                  ClockBase.StopWatch.CurrentInterface=Setting;
 265   2          }
 266   1      }
 267          
 268          void system_update()
 269          {
 270   1          switch(ClockBase.CurrentMode)       //选择显示不同的界面
 271   1          {
 272   2              case Timer:
 273   2                  P00=0;
 274   2                  P01=1;
 275   2                  P02=1;
 276   2                  Timer_interface();
 277   2                  //DisplayTime(ClockBase.Timer.CurrentTime.H,ClockBase.Timer.CurrentTime.M,ClockBase.Timer.Curr
             -entTime.S);
 278   2                  break;
 279   2              
 280   2              case StopWatch:
 281   2                  P00=1;
 282   2                  P01=0;
 283   2                  P02=1;
 284   2                  StopWatch_Interface();
 285   2                  //DisplayStopWatch(ClockBase.StopWatch.CurrentTime.M,ClockBase.StopWatch.CurrentTime.S,ClockBa
             -se.StopWatch.CurrentTime.MS);
 286   2                  break;
 287   2              
 288   2              case Clock:
 289   2                  P00=1;
 290   2                  P01=1;
 291   2                  P02=0;
 292   2                  Clock_interface();
 293   2                  //DisplayTime(ClockBase.Clock.CurrentTime.H,ClockBase.Clock.CurrentTime.M,ClockBase.Clock.Curr
             -entTime.S);
 294   2                  break;
 295   2              
 296   2              default:
 297   2                  ClockBase.CurrentMode=Clock;    //如果都不是就调整成clock界面
 298   2          }
 299   1      
 300   1          if(Get_Key()==ModeShifting_Button)
C51 COMPILER V9.00   CLOCKSYSTEM                                                           07/20/2017 20:57:28 PAGE 6   

 301   1          {
 302   2              ClockBase.CurrentMode++;
 303   2              if(ClockBase.CurrentMode==MAX_Mode)
 304   2                  ClockBase.CurrentMode=Timer;
 305   2          }
 306   1      }
 307          
 308          void T0_isr() interrupt 1 
 309          {
 310   1          if(ClockBase.StopWatch.CurrentInterface==Start)
 311   1          {
 312   2              Timeset(&(ClockBase.StopWatch.CurrentTime),5);
 313   2          }
 314   1          if(ClockBase.Clock.CurrentInterface==Start)
 315   1          {
 316   2              Timeset(&(ClockBase.Clock.CurrentTime),5);
 317   2          }
 318   1          if(ClockBase.Timer.CurrentInterface==Start)
 319   1          {
 320   2              Timeset(&(ClockBase.Timer.CurrentTime),-5);
 321   2              if(ClockBase.Timer.CurrentTime.H==23&&ClockBase.Timer.CurrentTime.M==59&&ClockBase.Timer.CurrentTi
             -me.S==59)
 322   2              {
 323   3                  ClockBase.Timer.CurrentInterface=Setting;
 324   3                  ClockBase.CurrentMode=Timer;
 325   3                  P07=0;
 326   3                  ClockBase.Timer.CurrentTime.H=0;
 327   3                  ClockBase.Timer.CurrentTime.M=0;
 328   3                  ClockBase.Timer.CurrentTime.S=0;
 329   3                  ClockBase.Timer.CurrentTime.MS=0;
 330   3              }
 331   2              else
 332   2                  P07=1;
 333   2          } 
 334   1      
 335   1              switch(ClockBase.CurrentMode)       //选择显示不同的界面
 336   1          {
 337   2              case Timer:
 338   2                  DisplayTime(ClockBase.Timer.CurrentTime.H,ClockBase.Timer.CurrentTime.M,ClockBase.Timer.Curren
             -tTime.S);
 339   2                  break;
 340   2              
 341   2              case StopWatch:
 342   2                  DisplayStopWatch(ClockBase.StopWatch.CurrentTime.M,ClockBase.StopWatch.CurrentTime.S,ClockBase
             -.StopWatch.CurrentTime.MS);
 343   2                  break;
 344   2              case Clock:
 345   2                  DisplayTime(ClockBase.Clock.CurrentTime.H,ClockBase.Clock.CurrentTime.M,ClockBase.Clock.Curren
             -tTime.S);
 346   2                  break;
 347   2          }
 348   1      }
 349          
 350          
 351          void exint0_isr() interrupt 0
 352          {
 353   1           switch(ClockBase.StopWatch.CurrentInterface)
 354   1          {
 355   2              case Start:
 356   2                  if(ClockBase.StopWatch.CurrentTime.S>3)
 357   2                  {
 358   3                      ClockBase.StopWatch.CurrentInterface=Setting;
C51 COMPILER V9.00   CLOCKSYSTEM                                                           07/20/2017 20:57:28 PAGE 7   

 359   3                                      Delay1000ms();
 360   3                  }
 361   2                  break;
 362   2              
 363   2              case Setting:
 364   2                  {
 365   3                      ClockBase.StopWatch.CurrentInterface=Start;
 366   3                                      ClockBase.StopWatch.CurrentTime.MS=0;
 367   3                      ClockBase.StopWatch.CurrentTime.S=0;
 368   3                      ClockBase.StopWatch.CurrentTime.M=0;
 369   3                      ClockBase.StopWatch.CurrentTime.H=0;
 370   3                  }
 371   2                  break;
 372   2          }
 373   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1235    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
